{"ast":null,"code":"import \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport _classCallCheck from \"/Users/bryan.arroyo/Documents/cd-..Cool-Retro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bryan.arroyo/Documents/cd-..Cool-Retro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bryan.arroyo/Documents/cd-..Cool-Retro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bryan.arroyo/Documents/cd-..Cool-Retro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bryan.arroyo/Documents/cd-..Cool-Retro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bryan.arroyo/Documents/cd-..Cool-Retro/src/components/Board/index.js\";\nimport React, { Component } from 'react';\nimport './style.scss';\n\nvar Board =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Board, _Component);\n\n  function Board(props) {\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this));\n\n    _this.editCard = function () {\n      _this.setState(function (prevState) {\n        return {\n          readOnly: !prevState.readOnly\n        };\n      });\n    };\n\n    _this.addInput = function () {\n      _this.setState({\n        displayBtn: false\n      });\n    };\n\n    _this.state = {\n      displayBtn: true,\n      readOnly: true\n    };\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"render\",\n    value: function render() {\n      var TextArea = _Input.TextArea;\n      var displayClass = 'ant-btn-dashed';\n      var contentBtn = this.state.displayBtn ? displayClass : \"\".concat(displayClass, \"--hide\");\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(_Row, {\n        gutter: 40,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(_Col, {\n        span: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        contentEditable: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Column 1\"), React.createElement(\"div\", {\n        className: \"cards\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"dashed\",\n        className: contentBtn,\n        onClick: this.addInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"+\"), !this.state.displayBtn && React.createElement(\"div\", {\n        className: \"editCard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"text-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(_Icon, {\n        type: \"edit\",\n        onClick: this.editCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })), React.createElement(TextArea, {\n        readOnly: this.state.readOnly,\n        className: \"card\",\n        placeholder: \"Write retro...\",\n        autosize: {\n          minRows: 2,\n          maxRows: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })))), React.createElement(_Col, {\n        span: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        contentEditable: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Column 2\"), React.createElement(\"div\", {\n        className: \"cards\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"dashed\",\n        className: contentBtn,\n        onClick: this.addInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"+\"), !this.state.displayBtn && React.createElement(\"div\", {\n        className: \"editCard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"text-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(_Icon, {\n        type: \"edit\",\n        onClick: this.editCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(TextArea, {\n        readOnly: this.state.readOnly,\n        className: \"card\",\n        placeholder: \"Write retro...\",\n        autosize: {\n          minRows: 2,\n          maxRows: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })))), React.createElement(_Col, {\n        span: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        contentEditable: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Column 3\"), React.createElement(\"div\", {\n        className: \"cards\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"dashed\",\n        className: contentBtn,\n        onClick: this.addInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"+\"), !this.state.displayBtn && React.createElement(\"div\", {\n        className: \"editCard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"text-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(_Icon, {\n        type: \"edit\",\n        onClick: this.editCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })), React.createElement(TextArea, {\n        readOnly: this.state.readOnly,\n        className: \"card\",\n        placeholder: \"Write retro...\",\n        autosize: {\n          minRows: 2,\n          maxRows: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return Board;\n}(Component);\n\nexport default Board;","map":{"version":3,"sources":["/Users/bryan.arroyo/Documents/cd-..Cool-Retro/src/components/Board/index.js"],"names":["React","Component","Board","props","editCard","setState","prevState","readOnly","addInput","displayBtn","state","TextArea","displayClass","contentBtn","minRows","maxRows"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Col, Input, Icon, Row } from 'antd'\nimport './style.scss'\n\nclass Board extends Component {\n  constructor (props) {\n    super()\n    this.state = {\n      displayBtn: true,\n      readOnly: true\n    }\n  }\n\n  editCard = () => {\n    this.setState(\n      prevState => ({readOnly: !prevState.readOnly})\n    )\n  }\n\n  addInput = () => {\n    this.setState({\n        displayBtn: false\n    })\n  }\n\n  render () {\n    const { TextArea } = Input\n    const displayClass = 'ant-btn-dashed'\n    const contentBtn = this.state.displayBtn ? displayClass : `${displayClass}--hide`\n\n    return (\n      <div className='container'>\n        <div className='content'>\n          <Row gutter={40}>\n            <Col span={8}>\n              <h1 contentEditable='true'>Column 1</h1>\n              <div className='cards'>\n                <Button type='dashed' className={contentBtn} onClick={this.addInput}>+</Button>\n                { !this.state.displayBtn &&\n                  <div className='editCard'>\n                    <span className='text-icon'><Icon type='edit' onClick={this.editCard} /></span>\n                    <TextArea readOnly={this.state.readOnly} className='card' placeholder='Write retro...'  autosize={{ minRows: 2, maxRows: 15 }}  />\n                  </div>\n                }\n              </div>\n            </Col>\n            <Col span={8}>\n              <h1 contentEditable='true'>Column 2</h1>\n              <div className='cards'>\n                <Button type='dashed' className={contentBtn} onClick={this.addInput}>+</Button>\n                  { !this.state.displayBtn && \n                    <div className='editCard'>\n                      <span className='text-icon'><Icon type='edit' onClick={this.editCard} /></span>\n                      <TextArea readOnly={this.state.readOnly} className='card' placeholder='Write retro...'  autosize={{ minRows: 2, maxRows: 15 }}  />\n                  </div>\n                  }\n              </div>\n            </Col>\n            <Col span={8}>\n              <h1 contentEditable='true'>Column 3</h1>\n              <div className='cards'>\n                <Button type='dashed' className={contentBtn} onClick={this.addInput}>+</Button>\n                  { !this.state.displayBtn && \n                    <div className='editCard'>\n                      <span className='text-icon'><Icon type='edit' onClick={this.editCard} /></span>\n                      <TextArea readOnly={this.state.readOnly} className='card' placeholder='Write retro...'  autosize={{ minRows: 2, maxRows: 15 }}  />\n                    </div>\n                  }\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Board\n"]},"metadata":{},"sourceType":"module"}